<% layout("/layouts/boilerplate") %>
  <script>
   const mapToken = "<%= process.env.MAP_TOKEN %>";
   const listing = <%- JSON.stringify(listing) %>; 
  </script>

<div class="row mt-3">
  <div class="col-8 offset-3">
    <h3><%= listing.title %></h3>
  </div>
  <div class="card col-6 offset-3 show-card listing-card">
  <img src="<%= listing.image.url %>" class="card-img-top show-img" alt="listing_image">
  <div class="card-body">
    <p class="card-text">Owned by: <i><%= listing.owner.username %></i></p>
    <p class="card-text"><%= listing.description %></p>
    <p class="card-text">&#8377;<%= listing.price? listing.price.toLocaleString("en-IN"):"N/A" %></p>
    <p class="card-text"><%= listing.location %></p>
    <p class="card-text"><%= listing.country %></p>
  </div>
</div>
  <br>

<% if(currUser && listing.owner._id.equals(currUser._id)) {%>
  <div class="btns mb-3">
    <a href="/listings/<%= listing._id%>/edit" class="btn btn-dark col-1 offset-3 edit-btn">Edit </a>

    <form method="POST" action="/listings/<%= listing._id%>?_method=DELETE">
        <button class="btn btn-dark offset-5">Delete </button>
    </form>
    </div>
<% } %>

   
    <div class="col-8 offset-3 mb-3">
    <% if(currUser) {%>
      <hr>
      <h4> Leave a Review</h4>
      <form action="/listings/<%= listing._id %>/reviews" method="POST" novalidate class="needs-validation"> 
        
<div class="mb-3 mt-3">
<label for="rating" class="form-label"> Rating </label>
<fieldset class="starability-slot">
  <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
  <input type="radio" id="first-rate1" name="review[rating]" value="1" />
  <label for="first-rate1" title="Terrible">1 star</label>
  <input type="radio" id="first-rate2" name="review[rating]" value="2" />
  <label for="first-rate2" title="Not good">2 stars</label>
  <input type="radio" id="first-rate3" name="review[rating]" value="3" />
  <label for="first-rate3" title="Average">3 stars</label>
  <input type="radio" id="first-rate4" name="review[rating]" value="4" />
  <label for="first-rate4" title="Very good">4 stars</label>
  <input type="radio" id="first-rate5" name="review[rating]" value="5" />
  <label for="first-rate5" title="Amazing">5 stars</label>
</fieldset>
</div>
       <div class="mb-3 mt-3">
        <label for="comment" class="form-label">Comments</label>
        <textarea name="review[comment]" id="comment" cols="30" rows="5" class="form-control" required></textarea>
        <div class="invalid-feedback">Please add some comment for review</div>
       </div>
      <button class="btn btn-outline-dark">Submit</button>
      </form>
    </hr>
     <% } %>


    <% if(listing.reviews.length >0) {%>
      <div class="row">
        <p><b>All Reviews</b></p>
      <%for (review of listing.reviews) { %>
        <div class="card col-5 ms-3 mb-3">
        <div class="card-body">
            <h5 class="card-title">@<%= review.author.username %></h5>
            <p class="starability-result card-text" data-rating="<%= review.rating %>"></p>
            <p class="card-text"><%= review.comment %></p>
            
        <form class="mb-3" method="POST" action="/listings/<%=listing._id %>/reviews/<%= review._id %>?_method=DELETE">
          <button class="btn btn-sm btn-dark">Delete</button>
        </form>
        </div>
        </div>
        <% } %>
      </div>
    <% } %>
      </div>

       <!-- Booking Form -->
    <% if(currUser) { %>
      <hr>
      <h4>Book Your Stay</h4>
      <form id="bookingForm" class="booking-form mt-3 mb-3">
        <div class="row mb-2">
          <div class="col-md-5">
            <label>Check-in Date:</label>
            <input type="date" name="checkIn" class="form-control" required>
          </div>
          <div class="col-md-5">
            <label>Check-out Date:</label>
            <input type="date" name="checkOut" class="form-control" required>
          </div>
        </div>
       <button type="submit" class="btn btn-dark">Confirm Dates</button>
      </form>
      
     <script>
    const today = new Date().toISOString().split("T")[0];
    const checkInInput = document.querySelector("[name='checkIn']");
    const checkOutInput = document.querySelector("[name='checkOut']");
    const bookingForm = document.getElementById("bookingForm");
    const bookBtn = document.getElementById("bookNowBtn");

    checkInInput.setAttribute("min", today);
    checkOutInput.setAttribute("min", today);

     bookingForm.addEventListener("submit", function(e) {
      e.preventDefault();

      const checkIn = checkInInput.value;
      const checkOut = checkOutInput.value;

      if (!checkIn || !checkOut) {
        alert("Please select check-in and check-out dates first!");
        return;
      }

      const checkInDate = new Date(checkIn);
      const checkOutDate = new Date(checkOut);

      if (checkOutDate <= checkInDate) {
        alert("Check-out date must be after check-in date!");
        return;
      }
     
      // ✅ Button effect on click
      const confirmBtn = bookingForm.querySelector("button[type='submit']");
      confirmBtn.classList.add("clicked");
      setTimeout(() => confirmBtn.classList.remove("clicked"), 1000);

      // ✅ Smooth scroll + Book Now highlight
      setTimeout(() => {
        bookBtn.scrollIntoView({ behavior: "smooth", block: "center" });
        bookBtn.classList.add("highlight");
        setTimeout(() => bookBtn.classList.remove("highlight"), 1500);
      }, 300);
    });
  </script>
  <% } else { %>
  <p class="mt-3"><a href="/login"><b style="font-size: large;">Login</a> to make a booking.</b></p></p>
<% } %>
 

      <div class="col-8 offset-3 mb-3">
          <h3>Where you'll be</h3>
          <div id="map"></div>
      </div>
    </div>

<script src="/js/map.js"></script>


    
<button id="bookNowBtn" class="btn btn-primary mb-3">Book Your Home</button>

<style>
  #bookNowBtn {
transition: background-color 0.3s ease, color 0.3s ease;
}
#bookNowBtn.green {
  background-color: #28a745 !important; /* green */
  border-color: #28a745 !important;
}
#bookNowBtn.red {
  background-color: #dc3545 !important; /* red */
  border-color: #dc3545 !important;
}

#bookNowBtn.highlight {
    animation: pulse 0.8s ease-in-out 2;
  }
  @keyframes pulse {
    0% { transform: scale(1); background-color: #007bff; }
    50% { transform: scale(1.1); background-color: #0056b3; }
    100% { transform: scale(1); background-color: #007bff; }
  }
   /* ✨ Confirm Dates Button Effect */
  .booking-form button.clicked {
    background-color: #198754 !important;
    color: #fff !important;
    box-shadow: 0 0 15px #198754;
    transform: scale(1.05);
    transition: all 0.3s ease;
  }
</style>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  document.getElementById("bookNowBtn").onclick = async function() {
    const isLoggedIn = <%= currUser ? true : false %>;
    const bookNowBtn = document.getElementById("bookNowBtn");
     
      bookNowBtn.classList.remove("green", "red");

    if (!isLoggedIn) {
      bookNowBtn.classList.add("red");
      alert("⚠️ You must be logged in to book your home!");
      window.location.href = "/login";
      return;
    }

     const checkIn = document.querySelector("[name='checkIn']").value;
     const checkOut =  document.querySelector("[name='checkOut']").value;

  
     if (!checkIn || !checkOut) {
      alert("Please select check-in and check-out dates first.");
      return;
    }

    const checkInDate = new Date(checkIn);
    const checkOutDate = new Date(checkOut);
    const days = Math.floor((checkOutDate - checkInDate) / (1000 * 60 * 60 * 24));

    if (days <= 0) {
      alert("Invalid date selection!");
      return;
    }

    const pricePerNight = <%= listing.price %>;
    const amount = Math.round(pricePerNight * days * 1.18);

    bookNowBtn.classList.add("green");

    try {

      const res = await fetch("/payment/create-order", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ amount }),
      });

      if (res.status === 401) {
      const data = await res.json();
      window.location.href = data.redirect;
      return;
    }

     const order = await res.json();


      const options = {
        key: "<%= process.env.RAZORPAY_KEY_ID %>",
        amount: order.amount,
        currency: order.currency,
        name: "Wanderlust Booking",
        description: "Payment for booking your stay",
        order_id: order.orderId,
        handler: async function (response) {
          const verifyRes = await fetch("/payment/verify-payment", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(response),
          });

          const verifyData = await verifyRes.json();
          if (verifyData.success) {
            window.location.href = verifyData.redirectUrl;
          } else {
            alert("Payment verification failed!");
          }
        },
        theme: {
          color: "#3399cc",
        },
      };

      const rzp1 = new Razorpay(options);
      rzp1.open();
    } catch (err) {
      console.error("Error initiating payment:", err);
      alert("Error initiating payment. Please try again later.");
      bookNowBtn.classList.add("red");
    }finally {
      // reset after a few seconds
      setTimeout(() => {
        bookNowBtn.classList.remove("green", "red");
      }, 3000);
    }
  };
</script>
